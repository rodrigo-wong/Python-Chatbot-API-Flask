{
  "intents": [
    {
      "tag": "greeting",
      "patterns": ["Hi", "Hello", "Hey", "Good morning", "Good afternoon"],
      "responses": ["Hello! How can I help you?", "Hi there! What can I assist you with today?"]
    },
    {
      "tag": "farewell",
      "patterns": ["Goodbye", "See you later", "Bye", "Adios"],
      "responses": ["Goodbye! If you have more questions, feel free to ask.", "See you later!"]
    },
    {
      "tag": "thanks",
      "patterns": ["Thank you", "Thanks", "Appreciate it"],
      "responses": ["You're welcome!", "No problem, happy to help!"]
    },
    {
      "tag": "python_intro",
      "patterns": ["What is Python?", "Tell me about Python", "Python basics"],
      "responses": ["Python is a high-level programming language known for its simplicity and readability. Example:\n\n\tprint('Hello, World!')"]
    },
    {
      "tag": "python_installation",
      "patterns": ["How can I install Python?", "Python installation", "Installing Python"],
      "responses": ["You can download Python from the official website (python.org) and follow the installation instructions for your operating system. Example:\n\n\t1. Download the Python installer from python.org.\n\t2. Run the installer and follow the on-screen instructions.\n\t3. Python will be installed on your system."]
    },
    {
      "tag": "python_syntax",
      "patterns": ["What is Python syntax?", "Python code structure", "Python indentation"],
      "responses": ["Python uses indentation to indicate blocks of code. Example:\n\n\tif x > 5:\n\t\tprint('x is greater than 5')\n\telse:\n\t\tprint('x is not greater than 5')"]
    },
    {
      "tag": "variables",
      "patterns": ["How do I declare variables in Python?", "Python variables", "Variable assignment"],
      "responses": ["In Python, you can declare a variable by simply assigning a value to a name. Example:\n\n\tx = 10"]
    },
    {
      "tag": "data_types",
      "patterns": ["What are the basic data types in Python?", "Python data types", "Data type examples"],
      "responses": ["Python has several basic data types, including integers, floats, strings, booleans, and lists. Example:\n\n\tname = 'Alice'"]
    },
    {
      "tag": "conditional_statements",
      "patterns": ["How do I use conditional statements in Python?", "Python if statements", "Conditional expressions"],
      "responses": ["You can use 'if', 'elif', and 'else' statements in Python for conditional logic. Example:\n\n\tif age >= 18:\n\t\tprint('You are an adult')\n\telse:\n\t\tprint('You are not an adult')"]
    },
    {
      "tag": "for_loop",
      "patterns": ["Tell me about for loops in Python", "Python for loop", "Using for loop"],
      "responses": ["Python provides 'for' loops for iterating over sequences. You can use 'for' loops with 'range()' to iterate a specific number of times, or you can iterate through a list. Example:\n\nIterating through a list:\n\n\tfruits = ['apple', 'banana', 'cherry']\n\tfor fruit in fruits:\n\t\tprint(fruit)\n\nUsing 'range()' to iterate a specific number of times:\n\n\tfor i in range(5):\n\t\tprint('Iteration', i)"]
    },
    {
      "tag": "while_loop",
      "patterns": ["Tell me about while loops in Python", "Python while loop", "Using while loop"],
      "responses": ["Python provides 'while' loops for executing code repeatedly while a condition is True. Example:\n\n\tcount = 0\n\twhile count < 5:\n\t\tprint('Count:', count)\n\t\tcount += 1"]
    },
    {
      "tag": "python_functions",
      "patterns": ["How do I define functions in Python?", "Python function syntax", "Creating functions"],
      "responses": ["You can define functions in Python using the 'def' keyword followed by the function name and parameters. Example:\n\n\tdef greet(name):\n\t\tprint('Hello, ' + name)\n\n\tgreet('Alice')"]
    },
    {
      "tag": "string_methods",
      "patterns": ["Common string manipulation methods", "Python string functions", "String operations"],
      "responses": ["Python provides various string methods, including 'upper()', 'lower()', 'strip()', 'split()', 'join()', and 'replace()', to manipulate and modify strings. Example:\n\n\ttext = 'hello'\n\tuppercase_text = text.upper()\n\tprint(uppercase_text)"]
    },
    {
      "tag": "list_methods",
      "patterns": ["Common list methods in Python", "List operations", "Manipulating lists"],
      "responses": ["Lists in Python can be modified using methods such as 'append()', 'extend()', 'insert()', 'remove()', 'pop()', and 'sort()'. Example:\n\n\tfruits = ['apple', 'banana', 'cherry']\n\tfruits.append('orange')\n\tprint(fruits)"]
    },
    {
      "tag": "help",
      "patterns": ["/help", "help", "list commands", "available questions"],
      "responses": ["Sure! Here are some questions you can ask me:\n1. What is Python?\n2. How can I install Python?\n3. What is Python syntax?\n4. How do I declare variables in Python?\n5. What are the basic data types in Python?\n6. How do I use conditional statements in Python?\n7. Tell me about for loops in Python.\n8. Tell me about while loops in Python.\n9. How do I define functions in Python?\n10. What are common string manipulation methods in Python?\n11. What are common list methods in Python?\nFeel free to ask any of these questions, or anything else you'd like to know!"]
    }
  ]
}
